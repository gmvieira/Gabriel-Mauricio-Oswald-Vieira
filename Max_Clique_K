# -*- coding: utf-8 -*-
"""
Created on Sat Feb 27 20:50:19 2021

@author: Gabriel M O Vieira - Complexidade 2020/3
         (Algoritmo guloso) Problema de seleÃ§Ã£o de atividades
"""
# FunÃ§Ã£o recursiva para decidir se:
# Existe clique em graph tal que |V (graph)| â‰¥ k?  
def maxCliques(i, l): 
    
    # Tamanho MÃ¡xima Clique
    max_ = 0; 
  
    # Verifica se algum vÃ©rtice a partir de i+1 pode ser inserido 
    for j in range(i + 1, n + 1): 
  
        # inclui vÃ©rtice em store 
        store[l] = j; 
  
        # Se graph nÃ£o Ã© uma clique sw tamanho k entÃ£o 
        # nÃ£o pode ser uma clique por adicionar outra edge 
        if (is_clique(l + 1)): 
  
            # Atualiza maior clique 
            max_ = max(max_, l); 
            # Verifica se outra edge pode ser incluida via recursÃ£o  
            max_ = max(max_, maxCliques(j, l + 1))  
        print ("\n" * 130, "EstÃ¡ decidido ... ")         
        return max_; 
 
# FunÃ§Ã£o que verifica se um conjunto de  
# vertices no array store Ã© uma clique ou nÃ£o !!  
def is_clique(b): 
  
    # Varre todo conjunto de edges 
    for i in range(1, b): 
        for j in range(i + 1, b):   
                       
             
            # Se alguma edge estÃ¡ faltando pra fechar a clique 
            if (graph[store[i]][store[j]] == 0): 
                return False;  
      
    return True; 
  
# Teste de Direcionador de cÃ³digo
if __name__ == '__main__': 
    
    edges = [[1,2],[2,3],[3,1]];  
        
    MAX = 10; 
    # Array de vÃ©rtices 
    store = [0] * MAX;  
    
    size = len(edges);  
    n = 10;

    # Inicializa Matriz adjacÃªncia  com Zeros 
    graph = [[0 for i in range(MAX)] for j in range(MAX)]; 
    
    # Monta Matriz adjacÃªncia em funÃ§Ã£o de edges dadas 
    for i in range(size): 
        graph[edges[i][0]] [edges[i][1]] = 1; 
        graph[edges[i][1]] [edges[i][0]] = 1;  
  
#=============
k = 3;
# ==========

if maxCliques(0, 1) >= k:     
    print ("==> Existe clique em graph tal que |V(graph)| â‰¥ k =",k, "ðŸ˜Š");  
else:     
    print ("==> NÃ£o existe clique em graph tal que |V(graph)| â‰¥ k =",k, "ðŸ˜Œ");
    
